# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP.NET Core service.

services:
  authservice:
    image: authservice
    environment:
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - DEFAULT_CONNECTIONSTRING=Host=postgres;Port=5432;Database=mydb;Username=myuser;Password=mypassword

    build:
      context: .
      dockerfile: Services/AuthService/Dockerfile
    ports:
      - 8080:8080
    networks:
      - backend
  vocabularyservice:
    image: vocabularyservice
    environment:
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - DEFAULT_CONNECTIONSTRING="Host=postgres;Port=5432;Database=mydb;Username=myuser;Password=mypassword"

    build: 
      context: .
      dockerfile: Services/VocabularyService/Dockerfile
      
    ports:
      - 8081:8081
    networks:
      - backend
  emailsender: 
    image: emailsender
    build: 
      context: ./Services/EmailSender/email-sender-nest
      dockerfile: Dockerfile
    env_file:
      - ./Services/EmailSender/email-sender-nest/.env

    ports:
      - 3000:3000

  apigateway:
    image: nginx:alpine
    container_name: apigateway
    ports:
      - "80:80"
    volumes:
      - ./GateWay/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - authservice
      - vocabularyservice
    # thêm network chỗ này để gán gateway 

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=mydb
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:7-alpine
    container_name: redis
    ports: ["6379:6379"]
  mailhog: 
    image: mailhog/mailhog
    ports: 
      - "1025:1025"
      - "8025:8025"




volumes:
  pgdata:

networks:
  backend:
    driver: bridge